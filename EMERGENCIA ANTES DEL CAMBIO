package com.example.bomberos

import android.content.Intent
import android.os.Bundle
import android.view.View
import android.widget.Button
import android.widget.TextView
import androidx.activity.OnBackPressedCallback
import androidx.activity.result.ActivityResultLauncher
import androidx.activity.result.contract.ActivityResultContracts
import androidx.activity.enableEdgeToEdge
import androidx.appcompat.app.AppCompatActivity
import androidx.core.view.ViewCompat
import androidx.core.view.WindowInsetsCompat

class Emergencia : AppCompatActivity() {

    private lateinit var txtNombre: TextView
    private lateinit var txtObac: TextView
    private lateinit var txtVoluntarios: TextView
    private lateinit var txtEmergencia: TextView
    private lateinit var txtDireccion: TextView
    private lateinit var txtUnidad: TextView
    private lateinit var txtHoraSalida: TextView
    private lateinit var txtHoraLlegada: TextView
    private lateinit var editarLauncher: ActivityResultLauncher<Intent>
    private lateinit var btnNuevaLista: Button
    private lateinit var btnEditar: Button

    override fun onCreate(savedInstanceState: Bundle?) {
        super.onCreate(savedInstanceState)
        enableEdgeToEdge()
        setContentView(R.layout.activity_emergencia)

        txtNombre = findViewById(R.id.nombre)
        txtObac = findViewById(R.id.textObac)
        txtVoluntarios = findViewById(R.id.textvol)
        txtEmergencia = findViewById(R.id.textemergencia)
        txtDireccion = findViewById(R.id.textdirect)
        txtUnidad = findViewById(R.id.textunidad)
        txtHoraSalida = findViewById(R.id.texthorasalida)
        txtHoraLlegada = findViewById(R.id.texthorallegada)
        btnNuevaLista = findViewById(R.id.button2)
        btnEditar = findViewById(R.id.button3)

        // Launcher para recibir datos desde MainActivity
        editarLauncher = registerForActivityResult(ActivityResultContracts.StartActivityForResult()) { result ->
            if (result.resultCode == RESULT_OK) {
                val data = result.data
                data?.let {
                    txtNombre.text = "Nombre: ${it.getStringExtra("nombre") ?: ""}"
                    txtObac.text = "Obac: ${it.getStringExtra("obac") ?: ""}"
                    txtVoluntarios.text = "Voluntarios: ${it.getStringExtra("voluntarios") ?: ""}"
                    txtEmergencia.text = "Emergencia: ${it.getStringExtra("emergencia") ?: ""}"
                    txtDireccion.text = "Dirección: ${it.getStringExtra("direccion") ?: ""}"
                    txtUnidad.text = "Unidad: ${it.getStringExtra("unidad") ?: ""}"
                    txtHoraSalida.text = "Hora Salida: ${it.getStringExtra("horaSalida") ?: ""}"
                    txtHoraLlegada.text = "Hora Llegada: ${it.getStringExtra("horaLlegada") ?: ""}"
                }
            }
        }

        // Crear nueva lista
        btnNuevaLista.setOnClickListener {
            val intent = Intent(this, MainActivity::class.java)
            editarLauncher.launch(intent)
        }

        // Editar datos existentes
        btnEditar.setOnClickListener {
            val intent = Intent(this, MainActivity::class.java)
            intent.putExtra("nombre", txtNombre.text.toString().substringAfter(": ").trim())
            intent.putExtra("obac", txtObac.text.toString().substringAfter(": ").trim())
            intent.putExtra("voluntarios", txtVoluntarios.text.toString().substringAfter(": ").trim())
            intent.putExtra("emergencia", txtEmergencia.text.toString().substringAfter(": ").trim())
            intent.putExtra("direccion", txtDireccion.text.toString().substringAfter(": ").trim())
            intent.putExtra("unidad", txtUnidad.text.toString().substringAfter(": ").trim())
            intent.putExtra("horaSalida", txtHoraSalida.text.toString().substringAfter(": ").trim())
            intent.putExtra("horaLlegada", txtHoraLlegada.text.toString().substringAfter(": ").trim())
            editarLauncher.launch(intent)
        }

        // Bloquear botón atrás
        onBackPressedDispatcher.addCallback(this, object : OnBackPressedCallback(true) {
            override fun handleOnBackPressed() {}
        })

        // Padding para barras del sistema
        val rootView = findViewById<View>(android.R.id.content)
        ViewCompat.setOnApplyWindowInsetsListener(rootView) { v, insets ->
            val systemBars = insets.getInsets(WindowInsetsCompat.Type.systemBars())
            v.setPadding(systemBars.left, systemBars.top, systemBars.right, systemBars.bottom)
            insets
        }
    }
}
