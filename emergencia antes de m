package com.example.bomberos

import android.content.Intent
import android.media.MediaPlayer
import android.os.Bundle
import android.view.View
import android.widget.Button
import android.widget.TextView
import androidx.activity.OnBackPressedCallback
import androidx.activity.OnBackPressedDispatcher
import androidx.activity.enableEdgeToEdge
import androidx.appcompat.app.AppCompatActivity
import androidx.core.view.ViewCompat
import androidx.core.view.WindowInsetsCompat

        class Emergencia : AppCompatActivity() {
            override fun onCreate(savedInstanceState: Bundle?) {
                super.onCreate(savedInstanceState)
                enableEdgeToEdge()
                setContentView(R.layout.activity_emergencia)

                // --- TextView y Button ---
                val txtNombre = findViewById<TextView>(R.id.nombre)
                val txtObac = findViewById<TextView>(R.id.textObac)
                val txtVoluntarios = findViewById<TextView>(R.id.textvol)
                val txtEmergencia = findViewById<TextView>(R.id.textemergencia)
                val txtDireccion = findViewById<TextView>(R.id.textdirect)
                val txtUnidad = findViewById<TextView>(R.id.textunidad)
                val txtHoraSalida = findViewById<TextView>(R.id.texthorasalida)
                val txtHoraLlegada = findViewById<TextView>(R.id.texthorallegada)
                val btnVolver = findViewById<Button>(R.id.button2)
                val btneditar = findViewById<Button>(R.id.button3)

                //recibe los datos
                intent.extras?.let { extras ->
                    txtNombre.text = getString(R.string.label_nombre, extras.getString("nombre") ?: "")
                    txtObac.text = getString(R.string.label_obac, extras.getString("obac") ?: "")
                    txtVoluntarios.text = getString(R.string.label_voluntarios, extras.getString("voluntarios") ?: "")
                    txtEmergencia.text = getString(R.string.label_emergencia, extras.getString("emergencia") ?: "")
                    txtDireccion.text = getString(R.string.label_direccion, extras.getString("direccion") ?: "")
                    txtUnidad.text = getString(R.string.label_unidad, extras.getString("unidad") ?: "")
                    txtHoraSalida.text = getString(R.string.label_horasalida, extras.getString("horaSalida") ?: "")
                    txtHoraLlegada.text = getString(R.string.label_horallegada, extras.getString("horaLlegada") ?: "")
                }

                //boton para volver en verdad profe me confundi es el crear otra lista para que lo entienda
                btnVolver.setOnClickListener {
                    val intent = Intent(this, MainActivity::class.java)
                    intent.addFlags(Intent.FLAG_ACTIVITY_CLEAR_TOP or Intent.FLAG_ACTIVITY_NEW_TASK)
                    startActivity(intent)
                    finish()
                }

                btneditar.setOnClickListener {
                    val intent = Intent(this, MainActivity::class.java)
                    intent.putExtra("nombre", txtNombre.text.toString())
                    intent.putExtra("obac", txtObac.text.toString())
                    intent.putExtra("voluntarios", txtVoluntarios.text.toString())
                    intent.putExtra("emergencia", txtEmergencia.text.toString())
                    intent.putExtra("direccion", txtDireccion.text.toString())
                    intent.putExtra("unidad", txtUnidad.text.toString())
                    intent.putExtra("horaSalida", txtHoraSalida.text.toString())
                    intent.putExtra("horaLlegada", txtHoraLlegada.text.toString())
                    startActivity(intent)
                }


                //bloquea el boton atras
                onBackPressedDispatcher.addCallback(this, object : OnBackPressedCallback(true) {
                    override fun handleOnBackPressed() {

                    }
                })



                val rootView = findViewById<View>(android.R.id.content)
                ViewCompat.setOnApplyWindowInsetsListener(rootView) { v, insets ->
                    val systemBars = insets.getInsets(WindowInsetsCompat.Type.systemBars())
                    v.setPadding(systemBars.left, systemBars.top, systemBars.right, systemBars.bottom)
                    insets

                }
            }

        }
